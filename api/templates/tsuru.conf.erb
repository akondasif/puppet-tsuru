# - HTTP Server
# http://docs.tsuru.io/en/latest/reference/config.html#tsuru-configuration
listen: "<%= @tsuru_server_listen %>"
host: "<%= @tsuru_host %>"
<%- if @tsuru_use_tls %>
use-tls: <%= @tsuru_use_tls %>
  tls-cert-file: <%= @tsuru_tls_cert_file %>
  tls-key-file: <%= @tsuru_tls_key_file %>
<%- end %>

# - Database access
# http://docs.tsuru.io/en/latest/reference/config.html#database-access
database:
  url: <%= @mongodb_url %>
  name: <%= @mongodb_database_name %>

<%- if @smtp_server %>
# - Email configuration
# http://docs.tsuru.io/en/latest/reference/config.html#email-configuration
smtp:
  server: <%= @smtp_server %>
  user: <%= @smtp_user %>
  <%= @smtp_password ? "password: #{@smtp_password}" : '' %>
<%- end %>

# - Git configuration
# http://docs.tsuru.io/en/latest/reference/config.html#git-configuration
repo-manager: <%= @repo_manager %>
git:
  unit-repo: <%= @git_unit_repo %>
  api-server: <%= @git_api_server %>
  <%= @git_rw_host ? "rw-host: #{@git_rw_host}" : "" %>
  <%= @git_ro_host ? "ro-host: #{@git_ro_host}" : "" %>

# - Authentication configuration
# http://docs.tsuru.io/en/latest/reference/config.html#authentication-configuration
auth:
  token-expire-days: <%= @auth_token_expire_days %>
  hash-cost: <%= @auth_hash_cost %>
  user-registration: <%= @auth_user_registration %>
  scheme: <%= @auth_scheme %>
  <%- if @auth_scheme.eql?('oauth') %>
  oauth:
    client-id: <%= @oauth_client_id %>
    client-secret: <%= @oauth_client_secret %>
    scope: <%= @oauth_scope %>
    auth-url: <%= @oauth_auth_url %>
    token-url: <%= @oauth_token_url %>
    info-url: <%= @oauth_info_url %>
    collection: <%= @oauth_collection %>
    callback-port: <%= @oauth_callback_port %>
  <%- end %>

# Queue configuration
# http://docs.tsuru.io/en/latest/reference/config.html#queue
queue: <%= @tsuru_queue %>
redis-queue:
  host: <%= @redis_host %>
  port: <%= @redis_port %>
<%= @redis_password ? "  password: #{@redis_password}" : ''  %>
<%= @redis_db ? "  db: #{@redis_db}" : ''  %>

# - Admin users
# http://docs.tsuru.io/en/latest/reference/config.html#admin-users
admin-team: <%= @tsuru_admin_team %>

<%- if @tsuru_apps_per_user %>
# - Quota management
# http://docs.tsuru.io/en/latest/reference/config.html#quota-management
quota:
  apps-per-user: <%= @tsuru_apps_per_user %>
  units-per-app: <%= @tsuru_units_per_app %>
<%- end %>

# - Router configuration
# http://docs.tsuru.io/en/latest/reference/config.html#config-routers
routers:
<%- @routers.keys.sort.each do |router| -%>
  <%= router %>:
  <%- if routers[router]['router_type'].eql?('hipache') -%>
    type: hipache
    domain: <%= routers[router]['hipache_domain'] %>
    redis-server: <%= routers[router]['hipache_redis_server'] %>
<%- elsif routers[router]['router_type'].eql?('galeb') -%>
    type: galeb
    api-url: <%= routers[router]['galeb_api_url'] %>
    username: <%= routers[router]['galeb_username'] %>
    password: <%= routers[router]['galeb_password'] %>
    domain: <%= routers[router]['galeb_domain'] %>
    environment: <%= routers[router]['galeb_environment'] %>
    farm-type: <%= routers[router]['galeb_farm_type'] %>
    plan: <%= routers[router]['galeb_plan'] %>
    project: <%= routers[router]['galeb_project'] %>
    load-balance-policy: <%= routers[router]['galeb_load_balance_policy'] %>
    rule-type: <%= routers[router]['galeb_rule_type'] %>
<%- else -%>
    <%- raise Puppet::Error, "Router type unknown. Valid types are: hipache or galeb" -%>
<%- end -%>
<%- end -%>

# - Provisioner configuration
# http://docs.tsuru.io/en/latest/reference/config.html#provisioner
provisioner: <%= @tsuru_provisioner %>
<%- if @tsuru_provisioner.eql?('docker') -%>
docker:
  memory: 512
  swap: 1024
  segregate: <%= @docker_segregate %>
  <%= @docker_registry ? "registry: #{@docker_registry}" : '' %>
  collection: <%= @docker_collection %>
  repository-namespace: <%= @docker_repository_namespace %>
  router: <%= @docker_router %>
  deploy-cmd: <%= @docker_deploy_cmd %>
  image-history-size: <%= @docker_image_history_size %>
  cluster:
    storage: <%= @docker_storage %>
    mongo-url: <%= @docker_cluster_mongo_url %>
    mongo-database: <%= @docker_cluster_mongodb_db %>
  run-cmd:
    bin: <%= @docker_run_cmd_bin %>
    port: <%= @docker_run_cmd_port %>
  ssh:
    user: <%= @docker_user %>
  <%- if @docker_healing_heal_nodes -%>
  healing:
    heal-nodes: <%= @docker_healing_heal_nodes %>
    active-monitoring-interval: <%= @docker_healing_active_monitoring_interval %>
    disabled-time: <%= @docker_healing_disabled_time %>
    max-failures: <%= @docker_healing_max_failures %>
    wait-new-time: <%= @docker_healing_wait_new_time %>
    heal-containers-timeout: <%= @docker_healing_heal_containers_timeout %>
    events-collection : <%= @docker_healing_events_collection %>
    max-time: <%= @docker_healthcheck_max_time %>
  <%- end -%>
  <%- if @docker_security_opts.length > 1 -%>
  security-opts:
  <%- docker_security_opts.each do |security_opt_item| -%>
    - <%= security_opt_item %>
  <%- end -%>
  <%- end -%>
  <%- if @docker_scheduler_memory -%>
  scheduler:
    total-memory-metadata: <%= @docker_scheduler_total_memory_metadata %>
    max-used-memory: <%= @docker_scheduler_max_used_memory %>
  <%- end -%>
  <%- if @docker_use_auto_scale -%>
  auto-scale:
    enabled: <%= @docker_auto_scale_enabled %>
    wait-new-time: <%= @docker_auto_scale_wait_time %>
    <%= @docker_auto_scale_groupby_metadata ? "group-by-metadata: #{docker_auto_scale_groupby_metadata}" : '' %>
    <%= @docker_auto_scale_metadata_filter ? "metadata-filter: #{docker_auto_scale_metadata_filter}" : '' %>
    <%= @docker_auto_scale_max_container_count ? "max-container-count: #{docker_auto_scale_max_container_count}" : '' %>
    scale-down-ratio: <%= @docker_auto_scale_down_ratio %>
    prevent-rebalance: <%= @docker_auto_scale_prevent_rebalance %>
    run-interval: <%= @docker_auto_scale_run_interval %>
  <%- end -%>
<%- end -%>

# - Iaas configuration
# http://docs.tsuru.io/en/latest/reference/config.html#iaas-configuration
<%- if @iaas_enable -%>
iaas:
  <%= @tsuru_iaas_default ? "default: #{tsuru_iaas_default}\n" : "default: ec2\n" -%>
  <%- if @cloudstack_apikey -%>
  cloudstack:
    api-key: <%= @cloudstack_apikey %>
    secret-key: <%= @cloudstack_secretkey %>
    url: <%= @cloudstack_api_url %>
    user-data: <%= @cloudstack_user_data %>
  <%- end -%>
  <%- if @ec2_key_id -%>
  ec2:
    key-id: <%= @ec2_key_id %>
    secret-key: <%= @ec2_secret_key %>
    user-data: <%= @ec2_user_data %>
    wait-timeout: <%= @ec2_wait_timeout %>
  <%- end -%>
<%= @custom_iaas.empty? ? nil : '  custom:' %>
<%- @custom_iaas.keys.sort.each do |custom_key| -%>
    <%= custom_key %>:
      provider: <%= custom_iaas[custom_key]['provider'] %>
      <%- if custom_iaas[custom_key]['provider'].eql?('cloudstack') -%>
      url: <%= custom_iaas[custom_key]['cloudstack_api_url'] %>
      api-key: "<%= custom_iaas[custom_key]['cloudstack_apikey'] %>"
      secret-key: "<%= custom_iaas[custom_key]['cloudstack_secretkey'] %>"
      user-data: <%= custom_iaas[custom_key]['cloudstack_user_data'] %>
      <%- else -%>
      key-id: "<%= custom_iaas[custom_key]['ec2_key_id'] %>"
      secret-key: "<%= custom_iaas[custom_key]['ec2_secret_key'] %>"
      user-data: <%= custom_iaas[custom_key]['ec2_user_data'] %>
      wait-timeout: <%= custom_iaas[custom_key]['ec2_wait_timeout'] %>
      <%- end -%>
  <%- end -%>
  node-protocol: <%= @iaas_node_protocol ? @iaas_node_protocol : 'http' %>
  node-port: <%= @iaas_node_port ? @iaas_node_port : '2375' %> 
<% end %>
# - Debug configuration
# http://docs.tsuru.io/en/latest/reference/config.html#log-level
debug: <%= @tsuru_debug %>
